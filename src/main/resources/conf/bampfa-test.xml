<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="updateProcessor" class="edu.berkeley.cspace.pictionbridge.StandardUpdateProcessor">
		<property name="updateMonitor" ref="databaseUpdateMonitor"/>
		<property name="uploader" ref="cspaceRestUploader"/>
		
		<!-- The maximum number of updates that may be processed in a single invocation. -->
		<!-- Comment this out to process all available updates. -->
		<property name="updateLimit" value="1"/>
		
		<!-- The number of updates to send in a single batch to the uploader. -->
		<!-- Multiple batches may be submitted until the available updates are exhausted. -->
		<!-- The effect of this setting depends on the uploader implementation. -->
		<!-- Default: 100 -->
		<property name="uploadBatchSize" value="20"/>
		
		<!-- Set whether or not updates should be deleted from the monitor queue after they have been -->
		<!-- processed. If false, the updates will be processed again on the next invocation, so typically -->
		<!-- this should only be set to false for testing. -->
		<!-- Default: true -->
		<property name="deleteProcessedUpdates" value="false"/>
	</bean>
	
	<bean id="databaseUpdateMonitor" class="edu.berkeley.cspace.pictionbridge.DatabaseUpdateMonitor">
		<!-- The path to a directory where files that need be created will be stored. -->
		<!-- Extracted binaries will be stored in a subdirectory inside of this directory. -->
		<property name="workPath" value="#{ systemProperties['pictionBridge.home'] }/work"/>

		<!-- The name of the table into which Piction sends its updates. -->
		<property name="interfaceTable" value="piction.piction_interface"/>

		<property name="dataSource">
			<bean class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
				<property name="driverClassName" value="org.postgresql.Driver" />

				<!-- Database connection info. -->
				<!-- Use systemEnvironment to retrieve environment variables. -->
				<property name="url" value="jdbc:postgresql://dba-postgres-dev-32.ist.berkeley.edu:5113/bampfa_domain_bampfa" />
				<property name="username" value="#{ systemEnvironment['PICTION_BRIDGE_DB_USER'] }" />
				<property name="password" value="#{ systemEnvironment['PICTION_BRIDGE_DB_PW'] }" />
			</bean>
	    </property>
	</bean>
	
	<bean id="cspaceRestUploader" class="edu.berkeley.cspace.pictionbridge.CollectionSpaceRestUploader">
		<property name="credentials">
			<bean class="org.apache.http.auth.UsernamePasswordCredentials">
				<!-- User -->
				<constructor-arg value="#{ systemEnvironment['PICTION_BRIDGE_CSPACE_USER'] }" />	
				<!-- Password -->
				<constructor-arg value="#{ systemEnvironment['PICTION_BRIDGE_CSPACE_PW'] }" />
			</bean>
		</property>

		<property name="servicesUrlTemplate" value="https://bampfa.cspace.berkeley.edu/cspace-services/{serviceName}/{csid}"/>
		<property name="mediaRefNameTemplate" value="urn:cspace:bampfa.cspace.berkeley.edu:media:id({csid})"/>
		
		<property name="filenameParser" ref="bmuFilenameParser"/>
	</bean>
	
	<bean id="bmuFilenameParser" class="edu.berkeley.cspace.pictionbridge.HttpBatchMediaUploaderFilenameParser">
		<property name="batchMediaUploader">
			<bean id="httpBatchMediaUploader" class="edu.berkeley.cspace.pictionbridge.HttpBatchMediaUploader">
				<property name="uploadUrl" value="https://dev.cspace.berkeley.edu/bampfa_project/uploadmedia/rest/upload" />
			</bean>		
		</property>
	</bean>
</beans>